@page "/migracion-excel"
@layout AdminLayout
@using SharedApp.Models.Dtos
@inject IJSRuntime JSRuntime
@using OfficeOpenXml
@using System.IO
@using System.Text
@* <PageTitle>Migraciones desde excel</PageTitle>

<h1 class="title headlineheadline2-h2">Migración Excel</h1>

<header class="header">
    <div class="button" style="background-color: var(--amber) !important;">
        <img class="add-24px" src="admin/img/add-24px.svg" alt="add-24px">
        <NavLink class="button-1 headingheadline5-h5" href="/nueva-migarcion-excel" style="color:black">Importar Excel</NavLink>
    </div>
</header>

<div class="table" style="margin-top: 1% !important;">
    <div class="table-heading">
        <article class="table-heading-1 table-heading-5">
            <div class="header-label-1">
                <div class="label-heading headingheadline5-h5">Migración</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </article>
        <article class="table-heading-2 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">EsquemaVista</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-1.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </article>
        <article class="table-heading-3 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Estado</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-2.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </article>
        <article class="table-heading-4 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Nombre archivo</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-3.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </article>
        <article class="table-heading-5 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Error</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-4.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </article>
    </div>
    @if (listasHevd != null && listasHevd.Any())
    {
        <div class="content">
            @foreach (var item in listasHevd)
            {
                <div class="row">
                    <div class="componente">
                        <div class="row-1 row-12">
                            <div class="ads-rules-list">
                                <div class="cell">
                                    <div class="migration-id bodybody-small">@item.IdLogMigracion</div>
                                </div>
                                <div class="cell cell-1">
                                    <div class="esquema-vista bodybody-small">@item.EsquemaVista</div>
                                </div>
                                <div class="cell cell-1">
                                    <div class="status bodybody-small">@item.Estado</div>
                                </div>
                                <div class="cell cell-1 landing-page-3">
                                    <div class="file-name bodybody-small">@item.ExcelFileName</div>
                                </div>
                                <div class="cell cell-1 landing-page-3">
                                    <p class="error-message bodybody-small">
                                        @item.Observacion
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="label valign-text-middle inter-regular-normal-comet-16px">No hay datos disponibles.</p>
    }

</div> *@

<PageTitle>Migraciones desde Excel</PageTitle>

<h1 class="title headlineheadline2-h2">Migración Excel</h1>

<header class="header">
    <div class="button" style="background-color: var(--amber) !important;">
        <img class="add-24px" src="admin/img/add-24px.svg" alt="add-24px">
        <NavLink class="button-1 headingheadline5-h5" href="/nueva-migarcion-excel" style="color:black">Importar Excel</NavLink>
    </div>
</header>

<div class="text-end my-3 d-flex justify-content-between">
    <!-- Botón de Exportar -->
    <div>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Outline="true" class="me-2" @onclick="ExportarExcel">
            <Icon Name="IconName.FileEarmarkArrowDown" />
            <span class="ms-2 inter-regular-normal-comet-14px">Exportar a Excel</span>
        </Button>
    </div>
</div>
<div class="table" style="margin-top: 1% !important;">
    <div class="table-heading">
        <article class="table-heading-1 table-heading-5">
            <div class="header-label-1">
                <div class="label-heading headingheadline5-h5">Migración</div>
            </div>
        </article>
        <article class="table-heading-2 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">EsquemaVista</div>
            </div>
        </article>
        <article class="table-heading-3 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Estado</div>
            </div>
        </article>
        <article class="table-heading-4 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Nombre archivo</div>
            </div>
        </article>
        <article class="table-heading-5 table-heading-5">
            <div class="header-label">
                <div class="label-heading headingheadline5-h5">Error</div>
            </div>
        </article>
    </div>

    @if (listasHevd != null && listasHevd.Any())
    {
        <div class="content">
            @foreach (var item in PaginatedItems)
            {
                <div class="row">
                    <div class="componente">
                        <div class="row-1 row-12">
                            <div class="ads-rules-list">
                                <div class="cell">
                                    <div class="migration-id bodybody-small">@item.IdLogMigracion</div>
                                </div>
                                <div class="cell cell-1">
                                    <div class="esquema-vista bodybody-small">@item.EsquemaVista</div>
                                </div>
                                <div class="cell cell-1">
                                    <div class="status bodybody-small">@item.Estado</div>
                                </div>
                                <div class="cell cell-1 landing-page-3">
                                    <div class="file-name bodybody-small">@item.ExcelFileName</div>
                                </div>
                                <div class="cell cell-1 landing-page-3">
                                    <p class="error-message bodybody-small">
                                        @item.Observacion
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Controles de paginación -->
        <div class="pagination-container">
            <button class="btn btn-primary btn-sm" @onclick="PreviousPage" disabled="@(!CanGoPrevious)">
                ⏪
            </button>

            <span class="pagination-text inter-regular-normal-comet-14px">Página @CurrentPage de @TotalPages</span>

            <button class="btn btn-primary btn-sm" @onclick="NextPage" disabled="@(!CanGoNext)">
                ⏩
            </button>
        </div>

    }
    else
    {
        <p class="label valign-text-middle inter-regular-normal-comet-16px">No hay datos disponibles.</p>
    }
</div>

<script>
    window.downloadExcel = (fileName, base64) => {
        const link = document.createElement("a");
        link.href = "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64," + base64;
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

</script>

@code {
    private async Task ExportarExcel()
    {
        if (listasHevd == null || !listasHevd.Any())
        {
            return;
        }

        ExcelPackage.LicenseContext = LicenseContext.NonCommercial; // Configurar licencia para EPPlus

        using var package = new ExcelPackage();
        var worksheet = package.Workbook.Worksheets.Add("Migraciones");

        // Agregar encabezados
        worksheet.Cells[1, 1].Value = "Migración";
        worksheet.Cells[1, 2].Value = "EsquemaVista";
        worksheet.Cells[1, 3].Value = "Estado";
        worksheet.Cells[1, 4].Value = "Nombre archivo";
        worksheet.Cells[1, 5].Value = "Error";

        int row = 2;
        foreach (var item in listasHevd)
        {
            worksheet.Cells[row, 1].Value = item.IdLogMigracion;
            worksheet.Cells[row, 2].Value = item.EsquemaVista;
            worksheet.Cells[row, 3].Value = item.Estado;
            worksheet.Cells[row, 4].Value = item.ExcelFileName;
            worksheet.Cells[row, 5].Value = item.Observacion;
            row++;
        }

        worksheet.Cells.AutoFitColumns(); // Ajustar automáticamente las columnas

        var fileName = "Migraciones_Export.xlsx";
        var fileBytes = package.GetAsByteArray();
        var fileBase64 = Convert.ToBase64String(fileBytes);

        await JSRuntime.InvokeVoidAsync("downloadExcel", fileName, fileBase64);
    }
}