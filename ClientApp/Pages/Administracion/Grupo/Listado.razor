@page "/grupos"
@layout AdminLayout
@using OfficeOpenXml
@using SharedApp.Models.Dtos
@inject IJSRuntime JSRuntime
@using System.IO
@using System.Text

<PageTitle>Homologación</PageTitle>

<div class="general title">
    <h2 class="title headlineheadline2-h2">Administación de Entidades</h2>
</div>

<div class="text-end my-3 d-flex justify-content-between">
    <!-- Botón de Exportar -->
    <div>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Outline="true" class="me-2" @onclick="ExportarExcel">
            <Icon Name="IconName.FileEarmarkArrowDown" />
            <span class="ms-2 inter-regular-normal-comet-14px">Exportar a Excel</span>
        </Button>
    </div>
</div>
<div class="tabla-1 tabla-2">
    <div class="table-heading table-1">
        <div class="table-heading-1 table-heading-11" style="width:50% !important">
            <div class="header-label-1 header-label-4">
                <div class="label-heading headingheadline5-h5">Texto a Mostrar en la Web</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-1.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </div>
        <div class="table-heading-1 table-heading-11" style="width:50% !important">
            <div class="header-label-1 header-label-4">
                <div class="label-heading headingheadline5-h5">Tooltip Web</div>
                <div class="frame-1000003808">
                    <img class="arrow_downward_alt" src="admin/img/arrow-downward-alt-2.svg" alt="arrow_downward_alt">
                </div>
            </div>
        </div>
        <div class="table-heading-1 table-heading-11" style="width:20% !important">
            <div class="header-label-1 header-label-4">
                <div class="label-heading headingheadline5-h5">Editar</div>
            </div>
        </div>
    </div>

    @if (listaHomologacions != null && listaHomologacions.Any())
    {
        <div class="content content-2">
            @foreach (var homologacion in PaginatedItems)
            {
                <div class="row row-15">
                    <div class="componente">
                        <div class="row-1 row-15">
                            <div class="ads-rules-list @(homologacion.MostrarWebOrden == 1 ? "table-primary" : "")">
                                <div class="cell cell-1" style="width:50% !important"><div class="cell-text cell-1 bodybody-small">@homologacion.MostrarWeb</div></div>
                                <div class="cell cell-1" style="width:50% !important"><div class="cell-text cell-1 bodybody-small">@homologacion.TooltipWeb</div></div>
                                <div class="cell cell-1" style="width:20% !important">
                                    <Tooltip Title="Editar registro">
                                        <Button Type="ButtonType.Link" Color="ButtonColor.Secondary" Outline="true" To="@($"/editar-grupos/{homologacion.IdHomologacion}")" Size="ButtonSize.Small">
                                            <Icon Name="IconName.PencilSquare" />
                                        </Button>
                                    </Tooltip>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Controles de paginación -->
        <div class="pagination-container">
            <button class="btn btn-primary btn-sm" @onclick="PreviousPage" disabled="@(!CanGoPrevious)">
                ⏪
            </button>

            <span class="pagination-text inter-regular-normal-comet-14px">Página @CurrentPage de @TotalPages</span>

            <button class="btn btn-primary btn-sm" @onclick="NextPage" disabled="@(!CanGoNext)">
                ⏩
            </button>
        </div>
    }
    else
    {
        <p class="label valign-text-middle inter-regular-normal-comet-16px">No hay datos disponibles.</p>
    }
</div>

    @* <div class="general table">
        <Grid @ref="grid" TItem="HomologacionDto" class="table table-hover table-bordered table-striped" DataProvider="HomologacionDataProvider" Responsive="true" Id="sortableGrid">
            <GridColumn TItem="HomologacionDto" HeaderText="Texto a Mostrar en la Web" PropertyName="MostrarWeb" ColumnClass="@(x => x.MostrarWebOrden == 1 ? "table-primary" : "")">
                @context.MostrarWeb
                <input type="hidden" value="@context.IdHomologacion" />
            </GridColumn>
            <GridColumn TItem="HomologacionDto" HeaderText="Tooltip Web" PropertyName="TooltipWeb" ColumnClass="@(x => x.MostrarWebOrden == 1 ? "table-primary" : "")">
                @context.TooltipWeb
            </GridColumn>
            <GridColumn TItem="HomologacionDto" HeaderText="Opciones" ColumnClass="@(x => x.MostrarWebOrden == 1 ? "table-primary" : "")">
                <Tooltip Title="Editar registro">
                    <Button Type="ButtonType.Link" Color="ButtonColor.Secondary" Outline="true" To="@($"/editar-grupos/{context.IdHomologacion}")" Size="ButtonSize.Small">
                        <Icon Name="IconName.PencilSquare" />
                    </Button>
                </Tooltip>
            </GridColumn>
        </Grid>
    </div> *@


<div class="form-row py-2">
    <Alert Color="AlertColor.Secondary" Dismissable="false">
        <Icon Name="IconName.ExclamationTriangleFill" class="me-2"></Icon>
        <span class="text-white label valign-text-middle inter-regular-normal-comet-16px">Registro para organización lógico [No es filtro]</span>
    </Alert>
</div>

<script>
    window.downloadExcel = (fileName, base64) => {
        const link = document.createElement("a");
        link.href = "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64," + base64;
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

</script>

@code {
    private async Task ExportarExcel()
    {
        if (listaHomologacions == null || !listaHomologacions.Any())
        {
            return;
        }

        ExcelPackage.LicenseContext = LicenseContext.NonCommercial; // Configurar licencia para EPPlus

        using var package = new ExcelPackage();
        var worksheet = package.Workbook.Worksheets.Add("Homologaciones");

        // Agregar encabezados
        worksheet.Cells[1, 1].Value = "Texto a Mostrar en la Web";
        worksheet.Cells[1, 2].Value = "Tooltip Web";

        int row = 2;
        foreach (var homologacion in listaHomologacions)
        {
            worksheet.Cells[row, 1].Value = homologacion.MostrarWeb;
            worksheet.Cells[row, 2].Value = homologacion.TooltipWeb;
            row++;
        }

        worksheet.Cells.AutoFitColumns(); // Ajustar automáticamente las columnas

        var fileName = "Homologaciones_Export.xlsx";
        var fileBytes = package.GetAsByteArray();
        var fileBase64 = Convert.ToBase64String(fileBytes);

        await JSRuntime.InvokeVoidAsync("downloadExcel", fileName, fileBase64);
    }
}