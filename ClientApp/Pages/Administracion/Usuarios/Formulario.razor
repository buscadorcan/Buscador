@page "/nuevo-usuario"
@page "/editar-usuario/{Id:int}"
@layout AdminLayout
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization;
@using ClientApp.Services.IService
@using SharedApp.Models.Dtos;
@* @attribute [Authorize] *@
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<style>
    .card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        margin: 20px 0;
    }

    .card-header {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-body {
        padding: 15px;
    }

    .card-footer {
        background-color: #f8f9fa;
        padding: 10px 15px;
        text-align: right;
        border-top: 1px solid #ddd;
    }

</style>

<PageTitle>Formulario Usuarios</PageTitle>

<EditForm Model="usuario" OnValidSubmit="RegistrarUsuario" class="pt-4">
    <DataAnnotationsValidator />

    @* <div class="card border"> *@
        <!-- Título -->
        <h1 class="title headlineheadline2-h2">Usuario del Sistema</h1>

        <div class="card-body px-lg-5 pt-4">
            <hr style="background-color:aliceblue" />

            <!-- Primera fila: Rol y Razón Social -->
            <div class="row py-2">
                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Rol</label>
                <div class="col" style="margin-top: 2% !important;">
                        @if (listaRoles != null && listaRoles.Any() && usuario != null)
                        {
                            <Dropdown AutoClose="true">
                                <DropdownToggleButton Color="ButtonColor.Secondary">
                                    @usuario.Rol
                                </DropdownToggleButton>
                                <DropdownMenu>
                                    @foreach (var rol in listaRoles)
                                    {
                                        <DropdownItem @onclick="@(() => OnAutoCompleteChanged(rol.Rol,rol.IdHomologacionRol))">@rol.Rol</DropdownItem>
                                    }
                                </DropdownMenu>
                            </Dropdown>
                        }
                        else
                        {
                            <p>Cargando roles...</p>
                        }
                        <ValidationMessage For="(() => usuario.Rol)" />
                    </div>
                </div>

                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Razón Social</label>
                <div class="col" style="margin-top: 2% !important;">
                        @if (listaOna != null && listaOna.Any() && usuario != null)
                        {
                            <Dropdown AutoClose="true">
                                <DropdownToggleButton Color="ButtonColor.Secondary">
                                    @usuario.RazonSocial
                                </DropdownToggleButton>
                                <DropdownMenu>
                                    @foreach (var ona in listaOna)
                                    {
                                        <DropdownItem @onclick="@(() => OnAutoCompleteRazonSocOnaChanged(ona.RazonSocial, ona.IdONA))">@ona.RazonSocial</DropdownItem>
                                    }
                                </DropdownMenu>
                            </Dropdown>
                        }
                        else
                        {
                            <p>Cargando Razon Social...</p>
                        }
                        <ValidationMessage For="(() => usuario.RazonSocial)" />
                    </div>
                </div>
            </div>

            <!-- Segunda fila: Nombre y Apellido -->
            <div class="row py-2">
                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Nombre</label>
                    <div class="col">
                    <InputText @bind-Value="usuario.Nombre" class="form-control inter-regular-normal-comet-14px" placeholder="Nombre..." style="margin-top: 2% !important;" />
                        <ValidationMessage For="(() => usuario.Nombre)" />
                    </div>
                </div>

                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Apellido</label>
                    <div class="col">
                    <InputText @bind-Value="usuario.Apellido" class="form-control inter-regular-normal-comet-14px" placeholder="Apellido..." style="margin-top: 2% !important;" />
                        <ValidationMessage For="(() => usuario.Apellido)" />
                    </div>
                </div>
            </div>

            <!-- Tercera fila: Email y Teléfono -->
            <div class="row py-2">
                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Email</label>
                    <div class="col">
                        <InputText @bind-Value="usuario.Email" class="form-control inter-regular-normal-comet-14px" style="margin-top: 2% !important;"
                                   placeholder="Email..."
                                   @oninput="ValidateEmail" />
                        <ValidationMessage For="(() => usuario.Email)" />
                        @if (!string.IsNullOrEmpty(emailValidationMessage))
                        {
                            <small class="text-danger">@emailValidationMessage</small>
                        }
                    </div>
                </div>

                <div class="col-md-6">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Teléfono</label>
                    <div class="col">
                    <InputText @bind-Value="usuario.Telefono" class="form-control inter-regular-normal-comet-14px" placeholder="+34 654321987" style="margin-top: 2% !important;" />
                        <ValidationMessage For="(() => usuario.Telefono)" />
                    </div>
                </div>
            </div>

            <!-- Clave -->
            <div class="form-row py-2">
            <label class="label valign-text-middle inter-regular-normal-comet-16px">Clave</label>
                <div class="col">
                <InputText @bind-Value="usuario.Clave" type="password" placeholder="Clave..." style="margin-top: 2% !important;" class="form-control inter-regular-normal-comet-14px" />
                    <ValidationMessage For="(() => usuario.Clave)" />
                </div>
            </div>
        </div>

  @*   </div> *@
</EditForm>

<div class="py-2 d-flex justify-content-end gap-2">
    <a @onclick="Regresar">
        <div class="button">
            <img class="icons" src="admin/img/icons.svg" alt="Icons">
            <div class="button-1 headingheadline4-h4">Regresar</div>
        </div>
    </a>
    <div class="save-button-container">
        <Button @ref="saveButton" class="button-2" @onclick="async () => await RegistrarUsuario()"><div class="button-3 headingheadline4-h4">Guardar</div></Button>
    </div>
</div>

@* <div class="py-2 d-flex justify-content-end gap-2">
    <Button Color="ButtonColor.Secondary" @onclick="Regresar">
        Regresar
    </Button>
    <Button @ref="saveButton" Color="ButtonColor.Success" @onclick="async () => await RegistrarUsuario()">
        Guardar
    </Button>
</div> *@

@code {
    private void Regresar()
    {
        NavigationManager.NavigateTo("/usuarios");
    }
}
