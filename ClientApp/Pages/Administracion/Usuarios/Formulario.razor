@page "/nuevo-usuario"
@page "/editar-usuario/{Id:int}"
@layout AdminLayout
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization;
@using ClientApp.Services.IService
@using SharedApp.Models.Dtos;
@* @attribute [Authorize] *@
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<PageTitle>Formulario Usuarios</PageTitle>

<EditForm Model="usuario" OnValidSubmit="RegistrarUsuario" class="pt-4">
    <DataAnnotationsValidator />

    <div class="card border">
        <div class="card-body px-lg-5 pt-4">
            <h3 class="text-success text-center py-2">
                <strong>Información Principal</strong>
            </h3>

            <hr style="background-color:aliceblue" />
            <div class="form-row py-2">
                <label class="col-form-label">Nombre</label>
                <div class="col">
                    <InputText @bind-Value="usuario.Nombre" class="form-control" placeholder="Nombre..." />
                    <ValidationMessage For="(() => usuario.Nombre)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Apellido</label>
                <div class="col">
                    <InputText @bind-Value="usuario.Apellido" class="form-control" placeholder="Apellido..." />
                    <ValidationMessage For="(() => usuario.Apellido)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Email</label>
                <div class="col">
                    <InputText @bind-Value="usuario.Email" class="form-control" placeholder="Email..." />
                    <ValidationMessage For="(() => usuario.Email)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Teléfono</label>
                <div class="col">
                    <InputText @bind-Value="usuario.Telefono" class="form-control" placeholder="Teléfono..." />
                    <ValidationMessage For="(() => usuario.Telefono)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Rol</label>
                <div class="col">

                    @if (listaRoles != null && listaRoles.Any() && usuario != null)
                    {
                        <Dropdown AutoClose="true">
                            <DropdownToggleButton Color="ButtonColor.Secondary">
                                @usuario.Rol  <!-- Mostrar el valor de 'usuario.Rol' -->
                            </DropdownToggleButton>

                            <DropdownMenu>
                                @foreach (var rol in listaRoles)
                                {
                                    <DropdownItem @onclick="@(() => OnAutoCompleteChanged(rol.Rol,rol.IdHomologacionRol))">@rol.Rol</DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    }
                    else
                    {
                        <p>Cargando roles...</p>  <!-- Mensaje de espera si los roles no están cargados -->
                    }

                    <ValidationMessage For="(() => usuario.Rol)" />
                </div>
            </div>


            <div class="form-row py-2">
                <label class="col-form-label">Razón Social</label>
                <div class="col">
                    @if (listaOna != null && listaOna.Any() && usuario != null)
                    {
                        <Dropdown AutoClose="true">
                            <DropdownToggleButton Color="ButtonColor.Secondary">
                                @usuario.RazonSocial  <!-- Mostrar el valor de 'usuario.Rol' -->
                            </DropdownToggleButton>

                            <DropdownMenu>
                                @foreach (var ona in listaOna)
                                {
                                    <DropdownItem @onclick="@(() => OnAutoCompleteRazonSocOnaChanged(ona.RazonSocial, ona.IdONA))">@ona.RazonSocial</DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    }
                    else
                    {
                        <p>Cargando Razon Social...</p>  <!-- Mensaje de espera si los roles no están cargados -->
                    }

                    <ValidationMessage For="(() => usuario.RazonSocial)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Clave</label>
                <div class="col">
                    <InputText @bind-Value="usuario.Clave" type="password" id="password" placeholder="Clave..." class="form-control" />
                    <ValidationMessage For="(() => usuario.Clave)" />
                </div>
            </div>

            <div class="py-2">
                <hr style="background-color:aliceblue" />
                <Button @ref="saveButton" Type="ButtonType.Submit" Color="ButtonColor.Success">
                    Guardar
                </Button>
            </div>
        </div>
    </div>
</EditForm>