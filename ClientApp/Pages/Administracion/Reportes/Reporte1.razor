@page "/reporte1"
@layout AdminLayout
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization
@using ClientApp.Services.IService
@using SharedApp.Models.Dtos
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="chart-container">
    <div class="row">
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_AcreditacionEsquema</h5>
            <div class="chart-wrapper">
                <canvas id="chart1" class="chart"></canvas>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_EstadoEsquema</h5>
            <div class="chart-wrapper">
                <canvas id="chart2" class="chart"></canvas>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_OecFecha</h5>
            <div class="chart-wrapper">
                <canvas id="chart3" class="chart"></canvas>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_OecPais</h5>
            <div id="heatmap1" class="heatmap"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_AcreditacionOna</h5>
            <div id="heatmap2" class="heatmap"></div>
        </div>
        <div class="col-lg-4 col-md-6 mb-4">
            <h5 class="text-primary text-center">@Titulo_vw_EsquemaPais</h5>
            <div id="heatmap3" class="heatmap"></div>
        </div>
    </div>
</div>

<script>
    window.initCharts = (chartsData) => {
        const createPieChart = (elementId, data) => {
            const canvas = document.getElementById(elementId);
            if (!canvas || canvas.tagName !== 'CANVAS') {
                console.error(`El elemento con ID ${elementId} no es un <canvas> o no existe.`);
                return;
            }

            const ctx = canvas.getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: data.map(item => item.label || 'Sin etiqueta'),
                    datasets: [{
                        data: data.map(item => item.value || 0),
                        backgroundColor: ['#6c63ff', '#63a4ff', '#00d1b2', '#ffdd57'],
                        borderWidth: 2,
                        borderColor: '#fff',
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                font: {
                                    size: 14
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return `${tooltipItem.label}: ${tooltipItem.raw}`;
                                }
                            }
                        }
                    }
                }
            });
        };

        const createHeatMap_Crecimiento_OEC_Fecha = (elementId, data) => {
            const canvas = document.getElementById(elementId);
            if (!canvas || canvas.tagName !== 'CANVAS') {
                console.error(`El elemento con ID ${elementId} no es un <canvas> o no existe.`);
                return;
            }

            const ctx = canvas.getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.map(item => item.label || 'Sin fecha'),
                    datasets: [{
                        label: 'OEC Acreditadas',
                        data: data.map(item => item.value || 0),
                        borderColor: '#4CAF50',
                        backgroundColor: 'rgba(76, 175, 80, 0.2)',
                        fill: true,
                        tension: 0.4 // Suavizado de la curva
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Fecha'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Cantidad'
                            }
                        }
                    }
                }
            });
        };

        // Inicializar gráficos
        createPieChart('chart1', chartsData[0]);
        createPieChart('chart2', chartsData[1]);
        createHeatMap_Crecimiento_OEC_Fecha('chart3', chartsData[2]);
    };

    window.initHeatMaps = (mapsData) => {
        const createHeatMap_OA = (elementId, data) => {
            if (typeof L === 'undefined') {
                console.error("Leaflet.js no está cargado correctamente.");
                return;
            }

            const map = L.map(elementId).setView([20, 0], 2);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            data.forEach(item => {
                const marker = L.circleMarker([0, 0], {
                    radius: item.organizacion > 50 ? 20 : item.organizacion > 20 ? 15 : 10,
                    color: 'red',
                    fillColor: item.organizacion > 50 ? 'red' : item.organizacion > 20 ? 'orange' : 'yellow',
                    fillOpacity: 0.7,
                    weight: 1
                }).bindPopup(
                    `<strong>País:</strong> ${item.pais}<br>
                             <strong>Organizaciones:</strong> ${item.organizacion}`
                );

                fetch(`https://nominatim.openstreetmap.org/search?q=${item.pais}&format=json&limit=1`)
                    .then(response => response.json())
                    .then(locations => {
                        if (locations.length > 0) {
                            marker.setLatLng([locations[0].lat, locations[0].lon]).addTo(map);
                        } else {
                            console.error(`No se encontraron coordenadas para ${item.pais}`);
                        }
                    })
                    .catch(err => console.error(`Error al buscar coordenadas para ${item.pais}:`, err));
            });
        };

        const createHeatMap_OEC_Fecha = (elementId, data) => {
            if (typeof L === 'undefined') {
                console.error("Leaflet.js no está cargado correctamente.");
                return;
            }

            const map = L.map(elementId).setView([20, 0], 2);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            data.forEach(item => {
                const marker = L.circleMarker([0, 0], {
                    radius: item.organizacion > 50 ? 20 : item.organizacion > 20 ? 15 : 10,
                    color: 'red',
                    fillColor: item.organizacion > 50 ? 'red' : item.organizacion > 20 ? 'orange' : 'yellow',
                    fillOpacity: 0.7,
                    weight: 1
                }).bindPopup(
                    `<strong>País:</strong> ${item.pais}<br>
                             <strong>Ona:</strong> ${item.esquema}<br>
                             <strong>Organizaciones:</strong> ${item.organizacion}`
                );

                fetch(`https://nominatim.openstreetmap.org/search?q=${item.pais}&format=json&limit=1`)
                    .then(response => response.json())
                    .then(locations => {
                        if (locations.length > 0) {
                            marker.setLatLng([locations[0].lat, locations[0].lon]).addTo(map);
                        } else {
                            console.error(`No se encontraron coordenadas para ${item.pais}`);
                        }
                    })
                    .catch(err => console.error(`Error al buscar coordenadas para ${item.pais}:`, err));
            });
        };

        const createHeatMap_OEC_Ubicacion = (elementId, data) => {
            if (typeof L === 'undefined') {
                console.error("Leaflet.js no está cargado correctamente.");
                return;
            }

            const map = L.map(elementId).setView([20, 0], 2);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            data.forEach(item => {
                const marker = L.circleMarker([0, 0], {
                    radius: item.organizacion > 50 ? 20 : item.organizacion > 20 ? 15 : 10,
                    color: 'red',
                    fillColor: item.organizacion > 50 ? 'red' : item.organizacion > 20 ? 'orange' : 'yellow',
                    fillOpacity: 0.7,
                    weight: 1
                }).bindPopup(
                    `<strong>País:</strong> ${item.pais}<br>
                         <strong>Esquema:</strong> ${item.esquema}<br>
                         <strong>Organizaciones:</strong> ${item.organizacion}`
                );

                fetch(`https://nominatim.openstreetmap.org/search?q=${item.pais}&format=json&limit=1`)
                    .then(response => response.json())
                    .then(locations => {
                        if (locations.length > 0) {
                            marker.setLatLng([locations[0].lat, locations[0].lon]).addTo(map);
                        } else {
                            console.error(`No se encontraron coordenadas para ${item.pais}`);
                        }
                    })
                    .catch(err => console.error(`Error al buscar coordenadas para ${item.pais}:`, err));
            });
        };

        

        createHeatMap_OA('heatmap1', mapsData.heatmap1);
        createHeatMap_OEC_Fecha('heatmap2', mapsData.heatmap2);
        createHeatMap_OEC_Ubicacion('heatmap3', mapsData.heatmap3);
    };

    window.initMap = (data) => {
        window.initCharts(data.chartsData);
        window.initHeatMaps(data.mapsData);
    };
</script>

<style>
    .chart-container {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .chart-wrapper {
        width: 100%;
        max-width: 400px;
        position: relative;
    }

    .chart {
        width: 100%;
        height: auto;
    }

    .heatmap {
        height: 300px;
        width: 100%;
        border: 1px solid #ccc;
        border-radius: 8px;
    }

    h5 {
        font-weight: bold;
        margin-bottom: 15px;
        text-align: center;
    }

    .text-primary {
        color: #007bff;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }
</style>
