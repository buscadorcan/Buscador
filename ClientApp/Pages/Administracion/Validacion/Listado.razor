@page "/validacion"
@layout AdminLayout
@using SharedApp.Models.Dtos

<PageTitle>Homologación</PageTitle>

<h3>Validación de Campos</h3>

<div class="row py-2">
    <div class="col-md-4">
        <div>
            <label class="col-form-label">Ona</label>
        </div>
        <Dropdown AutoClose="true">
            <DropdownToggleButton Color="ButtonColor.Secondary">
                @if (onaSelected?.Siglas != null)
                {
                    @onaSelected.Siglas
                }
                else
                {
                    <span>Seleccionar Ona</span>
                }
            </DropdownToggleButton>
            <DropdownMenu>
                @if (listaONAs != null)
                {
                    @foreach (var opcion in listaONAs)
                    {
                        <DropdownItem @onclick="async () => await CambiarSeleccionOna(opcion)">
                            @opcion.Siglas
                        </DropdownItem>
                    }
                }
            </DropdownMenu>
        </Dropdown>
    </div>
    <div class="col-md-4">
        <div>
            <label class="col-form-label">Esquemas</label>
        </div>
        <Dropdown AutoClose="true">
            <DropdownToggleButton Color="ButtonColor.Secondary">
                @if (esquemaSelected?.MostrarWeb != null)
                {
                    @esquemaSelected.MostrarWeb
                }
                else
                {
                    <span>Seleccionar ESQ</span>
                }
            </DropdownToggleButton>
            <DropdownMenu>
                @if (listaEsquemasOna != null)
                {
                    @foreach (var opcion in listaEsquemasOna)
                    {
                        <DropdownItem @onclick="() => CambiarSeleccionEsquema(opcion)">
                            @if (NombresVistas != null)
                            {
                                @if (NombresVistas.Count(c => c.Equals(opcion.MostrarWeb)) > 0)
                                {
                                    <Icon Name="IconName.Check" />
                                }
                            }
                            @opcion.MostrarWeb
                        </DropdownItem>
                    }
                }
            </DropdownMenu>
        </Dropdown>
    </div>
    <div class="col-md-4">
        <div>
            <label class="col-form-label">Vista Origen</label>
        </div>
        <input type="text" class="form-control" placeholder="" @bind="nombreSugerido" />
    </div>
    <div class="col-md-12 py-2">
        <Grid @ref="grid" TItem="EsquemaVistaDto" class="table table-hover table-bordered table-striped" DataProvider="EsquemaVistaDataProvider" Responsive="true">
            <!-- Columna de solo lectura -->
            <GridColumn TItem="EsquemaVistaDto" HeaderText="Nombre Campo Esquema" PropertyName="NombreEsquema">
                <DisplayTemplate>
                    @context.NombreEsquema
                </DisplayTemplate>
            </GridColumn>
            
            <!-- Columna habilitada para edición -->
            <GridColumn TItem="EsquemaVistaDto" HeaderText="Nombre Campo Vista" PropertyName="NombreVista">
                <EditorTemplate>
                    <input class="form-control" @bind="context.NombreVista" disabled="@enabledCeldas" />
                </EditorTemplate>
            </GridColumn>
            
            <!-- Columna de solo lectura -->
            <GridColumn TItem="EsquemaVistaDto" HeaderText="Existe" PropertyName="IsValid">
                <DisplayTemplate>
                    @context.IsValid
                </DisplayTemplate>
            </GridColumn>
        </Grid>
    </div>
    <div class="col-md-12 py-2 text-end">
        @if (listasHevd?.Count > 0) 
        {
            <Button @ref="saveButton" style="display: none;" Color="ButtonColor.Success" @onclick="async () => await GuardarCambios()">
                Guardar
            </Button>
            <Button @ref="validateButton" Color="ButtonColor.Success" @onclick="async () => await ValidarDatos()">
                Validar y Guardar
            </Button>
        }
    </div>
</div>


