@page "/nuevo-conexion"
@page "/editar-conexion/{Id:int}"
@layout AdminLayout
@using Microsoft.AspNetCore.Authorization
@using SharedApp.Data
@using SharedApp.Models.Dtos
@attribute [Authorize]
@inject NavigationManager NavigationManager

<PageTitle>Formulario Conexion</PageTitle>

<EditForm Model="conexion" OnValidSubmit="RegistrarConexion">
    <DataAnnotationsValidator />

        <div class="card-body px-lg-5 pt-4">
            <h1 class="title headlineheadline2-h2">Conexión al origen de datos</h1>

            <div class="row" style="margin-top: 2% !important;">
                <div class="col-5">
                    <label class="label valign-text-middle inter-regular-normal-comet-16px">Sistema</label>
                    <select class="form-control inter-regular-normal-comet-14px" @bind="conexion.IdONA" style="margin-top: 2% !important;">
                        <option value="">Seleccione una organización</option>
                        @if (listaOrganizaciones != null)
                        {
                            @foreach (var organizacion in listaOrganizaciones)
                            {
                                <option value="@organizacion.IdONA">@organizacion.RazonSocial</option>
                            }
                        }
                    </select>
                    <ValidationMessage For="(() => conexion.IdONA)" />
                </div>
                <div class="col-5">
                    <label class="label valign-text-middle inter-regular-normal-comet-16px">Origen de Datos</label>
                    <select class="form-control inter-regular-normal-comet-14px" @onchange="CambiarSeleccionMotor" value="@conexion.OrigenDatos" style="margin-top: 2% !important;">
                        <option value="">Seleccionar Motor de Base Datos</option>
                        @foreach (var databaseType in Enum.GetValues(typeof(DatabaseType)))
                        {
                            <option value="@databaseType">@databaseType</option>
                        }
                    </select>
                    <ValidationMessage For="(() => conexion.OrigenDatos)" />
                </div>
            </div>
            <div class="form-row py-2">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Nombre Base de Datos</label>
                <div class="col">
                    <InputText @bind-Value="conexion.BaseDatos" class="form-control inter-regular-normal-comet-14px" placeholder="BaseDatos..." style="margin-top: 2% !important;" />
                    <ValidationMessage For="(() => conexion.BaseDatos)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Host</label>
                <div class="col">
                    <InputText @bind-Value="conexion.Host" class="form-control inter-regular-normal-comet-14px" placeholder="Host..." style="margin-top: 2% !important;" />
                    <ValidationMessage For="(() => conexion.Host)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Puerto</label>
                <div class="col">
                    <InputNumber @bind-Value="conexion.Puerto" style="margin-top: 2% !important;"
                                 class="form-control inter-regular-normal-comet-14px"
                                 placeholder="Puerto..."
                                 oninput="if (this.value.length > 6) this.value = this.value.slice(0, 6);
                              this.value = this.value.replace(/[^0-9]/g, '');" />
                    <ValidationMessage For="(() => conexion.Puerto)" />
                </div>
            </div>

            <div class="form-row py-2">
                <div class="col">
                    <label class="label valign-text-middle inter-regular-normal-comet-16px">Usuario</label>
                    <InputText @bind-Value="conexion.Usuario" class="form-control inter-regular-normal-comet-14px" placeholder="Usuario..." style="margin-top: 2% !important;" />
                    <ValidationMessage For="(() => conexion.Usuario)" />
                </div>
            </div>
            <div class="form-row py-2">
                <div class="col">
                    <label class="label valign-text-middle inter-regular-normal-comet-16px">Contraseña</label>
                    <InputText @bind-Value="conexion.Contrasenia" class="form-control inter-regular-normal-comet-14px" placeholder="Contrasenia..." type="password" id="password" style="margin-top: 2% !important;" />
                    <ValidationMessage For="(() => conexion.Contrasenia)" />
                </div>
            </div>

            <div class="form-group py-2">
                <ValidationMessage For="(() => conexion.Migrar)" />
                <label class="label valign-text-middle inter-regular-normal-comet-16px">Migración</label>
            <Switch @bind-Value="isMigrar" Label="Seleccione una opción" Class="label valign-text-middle inter-regular-normal-comet-16px" style="margin-top: 2% !important;" />
                <div class="mt-3"><b>@(isMigrar ? "SI" : "NO")</b></div>
                <ValidationMessage For="(() => conexion.Migrar)" />
            </div>

            <div class="form-row py-2">
                <div class="col">
                    @foreach (var item in lista)
                    {
                        <Icon Name="IconName.CheckAll" Size="IconSize.x2" />
                        <label class="label valign-text-middle inter-regular-normal-comet-16px">
                            @item.MostrarWeb
                        </label>
                    }
                </div>
            </div>

        </div>
</EditForm>

@* <div class="py-2 d-flex justify-content-end gap-2">
    <Button Color="ButtonColor.Secondary" @onclick="Regresar">
        Regresar
    </Button>
    <Button @ref="saveButton" Color="ButtonColor.Success" @onclick="async () => await RegistrarConexion()">
        Guardar
    </Button>
</div> *@
<div class="py-2 d-flex justify-content-end gap-2">
    <a @onclick="Regresar">
        <div class="button">
            <img class="icons" src="admin/img/icons.svg" alt="Icons">
            <div class="button-1 headingheadline4-h4">Regresar</div>
        </div>
    </a>
    <div class="save-button-container">
        <Button @ref="saveButton" class="button-2 label valign-text-middle inter-regular-normal-comet-14px" @onclick="async () => await RegistrarConexion()"><div class="button-3 headingheadline4-h4">Guardar</div></Button>
    </div>
</div>

@code {
    private void Regresar()
    {
        NavigationManager.NavigateTo("/conexion");
    }
}