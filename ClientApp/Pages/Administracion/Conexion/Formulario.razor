@page "/nuevo-conexion"
@page "/editar-conexion/{Id:int}"
@layout AdminLayout
@using Microsoft.AspNetCore.Authorization
@using SharedApp.Data
@using SharedApp.Models.Dtos
@attribute [Authorize]

<PageTitle>Formulario Usuarios</PageTitle>

<EditForm Model="conexion" OnValidSubmit="RegistrarConexion" class="pt-4">
    <DataAnnotationsValidator />

    <div class="card border">
        <div class="card-body px-lg-5 pt-4">
            <h3 class="text-success text-center py-2">
                <strong>Información Principal</strong>
            </h3>

            <hr style="background-color:aliceblue" />
            <div class="form-row py-2">
                <label class="col-form-label">Sistema</label>
                <div class="col">
                    <Dropdown AutoClose="true">
                        <DropdownToggleButton Color="ButtonColor.Secondary">
                            @if (!string.IsNullOrEmpty(conexion.CodigoHomologacion))
                            {
                                @listaOrganizaciones.First(c => c.IdHomologacion.Equals(conexion.CodigoHomologacion)).MostrarWeb
                            }
                            else
                            {
                                <span>Seleccionar ORG</span>
                            }
                        </DropdownToggleButton>
                        <DropdownMenu>
                            @if (listaOrganizaciones != null)
                            {
                                @foreach(var opcion in listaOrganizaciones) {
                                    <DropdownItem
                                        @onclick="() => CambiarSeleccionOrganizacion(opcion.CodigoHomologacion)"
                                    >
                                        @opcion.MostrarWeb
                                    </DropdownItem>
                                }
                            }
                        </DropdownMenu>
                    </Dropdown>
                    <ValidationMessage For="(() => conexion.CodigoHomologacion)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Motor de Base Datos</label>
                <div class="col">
                    <Dropdown AutoClose="true">
                        <DropdownToggleButton Color="ButtonColor.Secondary">
                            @if (!string.IsNullOrEmpty(conexion.MotorBaseDatos))
                            {
                                @conexion.MotorBaseDatos
                            }
                            else
                            {
                                <span>Seleccionar Motor de Base Datos</span>
                            }
                        </DropdownToggleButton>
                        <DropdownMenu>
                            @foreach (var databaseType in Enum.GetValues(typeof(DatabaseType)))
                            {
                                <DropdownItem
                                    @onclick="() => CambiarSeleccionMotor(databaseType.ToString())"
                                >
                                    @databaseType
                                </DropdownItem>
                            }
                        </DropdownMenu>
                    </Dropdown>
                    <ValidationMessage For="(() => conexion.MotorBaseDatos)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Base Datos</label>
                <div class="col">
                    <InputText @bind-Value="conexion.BaseDatos" class="form-control" placeholder="BaseDatos..." />
                    <ValidationMessage For="(() => conexion.BaseDatos)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Host</label>
                <div class="col">
                    <InputText @bind-Value="conexion.Host" class="form-control" placeholder="Host..." />
                    <ValidationMessage For="(() => conexion.Host)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Puerto</label>
                <div class="col">
                    <InputNumber @bind-Value="conexion.Puerto" class="form-control" placeholder="Puerto..." />
                    <ValidationMessage For="(() => conexion.Puerto)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Usuario</label>
                <div class="col">
                    <InputText @bind-Value="conexion.Usuario" class="form-control" placeholder="Usuario..." />
                    <ValidationMessage For="(() => conexion.Usuario)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Contraseña</label>
                <div class="col">
                    <InputText @bind-Value="conexion.Contrasenia" class="form-control" placeholder="Contrasenia..." type="password" id="password" />
                    <ValidationMessage For="(() => conexion.Contrasenia)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">TiempoEspera Segundos</label>
                <div class="col">
                    <InputNumber @bind-Value="conexion.TiempoEspera" class="form-control" placeholder="TiempoEspera..." />
                    <ValidationMessage For="(() => conexion.TiempoEspera)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Filtros</label>
                <div class="col">
                    <AutoComplete @bind-Value="homologacionName"
                        TItem="HomologacionDto"
                        DataProvider="VwHomologacionDataProvider"
                        PropertyName="CustomMostrarWeb"
                        Placeholder="Buscar..."
                        OnChanged="(HomologacionDto vwHomologacion) => OnAutoCompleteChanged(vwHomologacion)"
                    />
                </div>
            </div>

            <div class="form-row py-2">
                <div class="col">
                    @foreach (var item in lista)
                    {
                        <Icon Name="IconName.CheckAll" Size="IconSize.x2" />
                        <label class="col-form-label">
                            @item.CustomMostrarWeb
                        </label>
                    }
                </div>
            </div>

            <div class="py-2">
                <hr style="background-color:aliceblue" />
                <Button @ref="saveButton" Type="ButtonType.Submit" Color="ButtonColor.Success">
                    Guardar
                </Button>
            </div>
        </div>
    </div>
</EditForm>