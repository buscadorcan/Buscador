@page "/nuevo-campos-homologacion/{IdPadre:int}"
@page "/editar-campos-homologacion/{IdPadre:int}/{Id:int}"
@layout AdminLayout
@using Microsoft.AspNetCore.Authorization;
@using ClientApp.Services.IService
@using ClientApp.Models;
@using SharedApp.Models.Dtos
@attribute [Authorize]
@inject NavigationManager NavigationManager
<style>
    .card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        margin: 20px 0;
    }

    .card-header {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-body {
        padding: 15px;
    }

    .card-footer {
        background-color: #f8f9fa;
        padding: 10px 15px;
        text-align: right;
        border-top: 1px solid #ddd;
    }

</style>

<PageTitle>Formulario de Esquema</PageTitle>

<EditForm Model="homologacion" OnValidSubmit="GuardarHomologacion" class="pt-4">
    <DataAnnotationsValidator />
    <div class="card border">
        <!-- Título -->
        <div class="card-header">
            <h3 class="text-white font-weight-bold text-center m-0">Actualizar / Registrar [@homologacionGrupo?.MostrarWeb]</h3>
        </div>
        <div class="card-body px-lg-5 pt-4">
            @* <h3 class="text-success text-center">
                <strong>Actualizar / Registrar [@homologacionGrupo?.MostrarWeb]</strong>
            </h3> *@

            <hr style="background-color:aliceblue" />

            <div class="form-row py-2">
                <label class="col-form-label">Vista Código Homologado</label>
                <div class="col">
                    <InputText @bind-Value="homologacion.NombreHomologado" class="form-control" placeholder="ingresar..." />
                    <ValidationMessage For="(()=>homologacion.NombreHomologado)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Texto a Mostrar en la Web</label>
                <div class="col">
                    <InputText @bind-Value="homologacion.MostrarWeb" class="form-control" placeholder="ingresar..." />
                    <ValidationMessage For="(()=>homologacion.MostrarWeb)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Tooltip Web</label>
                <div class="col">
                    <InputText @bind-Value="homologacion.TooltipWeb" class="form-control" placeholder="ingresar..." />
                    <ValidationMessage For="(()=>homologacion.TooltipWeb)" />
                </div>
            </div>

            <div class="form-row py-2">
                <label class="col-form-label">Indexar</label>
           @*      <select class="form-control" @bind="homologacion.Indexar">
                    <option value="">Seleccione una opción</option>
                    <option value="S">SI</option>
                    <option value="N">NO</option>
                </select> *@
                <Switch @bind-Value="isIndexar" Label="Seleccione una opción" />
                <div class="mt-3"><b>@(isIndexar ? "SI" : "NO")</b></div>
                <ValidationMessage For="(() => homologacion.Indexar)" />
            </div>

            <div class="form-group row py-2">
                <div class="col-md-4">
                    <label class="col-form-label">Tipo de Dato</label>
                    <div>
                        <Dropdown AutoClose="true">
                            <DropdownToggleButton Color="ButtonColor.Secondary">
                                @homologacion?.MascaraDato
                            </DropdownToggleButton>
                            <DropdownMenu>
                                <DropdownItem @onclick="@(() => OnAutoCompleteChanged("TEXTO"))">TEXTO</DropdownItem>
                                <DropdownItem @onclick="@(() => OnAutoCompleteChanged("FECHA"))">FECHA</DropdownItem>
                                <DropdownItem @onclick="@(() => OnAutoCompleteChanged("NUMERICO"))">NUMERICO</DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                        <ValidationMessage For="(()=>homologacion.MascaraDato)" />
                    </div>
                </div>

                <div class="col-md-4">
                    <label class="col-form-label">Si No Hay Dato</label>
                    <InputText @bind-Value="homologacion.SiNoHayDato" class="form-control" placeholder="ingresar..." maxlength="10" />
                    <ValidationMessage For="(()=>homologacion.SiNoHayDato)" />
                </div>

                <div class="col-md-4">
                    <label class="col-form-label">Ancho Columna</label>
                    <InputNumber @bind-Value="homologacion.AnchoColumna" class="form-control" placeholder="ingresar..." />
                    <ValidationMessage For="(()=>homologacion.AnchoColumna)" />
                </div>
            </div>
        </div>
    </div>
    
</EditForm>

<div class="py-2 d-flex justify-content-end gap-2">
    <Button Color="ButtonColor.Secondary" @onclick="Regresar">
        Regresar
    </Button>
    <Button @ref="saveButton" Color="ButtonColor.Success" @onclick="async () => await GuardarHomologacion()">
        Guardar
    </Button>
</div>

@code {
    private void Regresar()
    {
        NavigationManager.NavigateTo("/campos-homologacion");
    }
}
