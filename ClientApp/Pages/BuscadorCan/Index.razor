@page "/"
@page "/persona"
@using ClientApp.Models;
@using SharedApp.Models.Dtos
@using Newtonsoft.Json;

<PageTitle>Buscador Andino</PageTitle>

<div class="search-area-wrapper">
    <div class="search-area container">
        <h3 class="search-header">BUSCADOR SERVICIOS DE EVALUACIÃ“N DE LA CONFORMIDAD ACREDITADOS EN LA CAN</h3>

        <EditForm Model="buscarRequest" OnValidSubmit="BuscarPalabraRequest" id="search-form" class="search-form clearfix" autocomplete="off">
            <InputText @bind-Value="buscarRequest.TextoBuscar" class="search-term required" type="text" style="box-sizing: content-box" placeholder="Ingrese Texto a buscar" />
            <input class="search-btn" type="submit" value="Buscar" />
            <div id="search-error-container"></div>
        </EditForm>
    </div>
</div>

<div class="page-container">
    <div class="container">
        <div class="row">

            <div class="span12 page-content">
                <div class="row-fluid">

                    @if (listadeOpciones != null) {
                        @for (int i = 0; i < listadeOpciones.Count; i += 1) {
                            var currentIndex = i;
                            <div class="span2">
                                <Dropdown AutoClose="true" style="max-width: 100%; min-width: 100%">
                                    <DropdownToggleButton Color="ButtonColor.Secondary">
                                        @listaEtiquetasFiltros?[currentIndex].MostrarWeb
                                    </DropdownToggleButton>
                                    <DropdownMenu>
                                        @if (listadeOpciones?[currentIndex] != null) {
                                            foreach (var opcion in listadeOpciones[currentIndex] ?? []) {
                                                <DropdownItem @onclick="() => CambiarSeleccion(opcion.IdHomologacion, currentIndex)">
                                                    @if (selectedValues != null && selectedValues.Count > currentIndex && selectedValues[currentIndex].Contains(opcion.IdHomologacion))
                                                    {
                                                        <Icon Name="IconName.Check" />
                                                    }
                                                    @opcion.MostrarWeb
                                                </DropdownItem>
                                            }
                                        }
                                    </DropdownMenu>
                                </Dropdown>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <IndexGrilla
            @ref="childComponentRef"
            buscarRequest="@buscarRequest"
            selectedValues="@selectedValues"
        />
    </div>
</div>