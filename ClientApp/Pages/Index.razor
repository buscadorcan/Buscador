@page "/"
@page "/persona"
@using ClientApp.Services.IService
@using ClientApp.Models;
@using Newtonsoft.Json;
@inject IVwHomologacionRepository vwHomologacionRepository

<PageTitle>Inicio</PageTitle>

<!-- Start of Search Wrapper -->
<div class="search-area-wrapper">
        <div class="search-area container">
                <h3 class="search-header">BUSCADOR SERVICIOS DE EVALUACIÃ“N DE LA CONFORMIDAD ACREDITADOS EN LA CAN</h3>

                <EditForm Model="buscarRequest" OnValidSubmit="BuscarPalabraRequest" id="search-form" class="search-form clearfix" autocomplete="off">
                        <InputText @bind-Value="buscarRequest.TextoBuscar" class="search-term required" type="text" id="s" name="s" placeholder="Ingrese Texto a buscar" title="* Please enter a search term!" />
                        <input class="search-btn" type="submit" value="Buscar" />
                        <div id="search-error-container"></div>
                </EditForm>
        </div>
</div>
<!-- Start of Page Container -->
<div class="page-container">
        <div class="container">
                <div class="row">

                        <!-- start of page content -->
                        <div class="span12 page-content" style="margin-bottom: 10px;border-bottom: 1px solid #e8e8e8;">
                            <div class="row-fluid">

                                @if (listaEtiquetasFiltros != null) {
                                    foreach(var etiqueta in listaEtiquetasFiltros) {
                                        <div class="span2">
                                            <h5><Tooltip Title="@etiqueta.Descripcion">@etiqueta.MostrarWeb</Tooltip></h5>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <!-- start of page content -->
                        <div class="span12 page-content">
                            <div class="row-fluid">

                                @if (listadeOpciones != null) {
                                    @foreach(var opciones in listadeOpciones) {
                                        <div class="span2">
                                            <select id="listaAlcance" style="max-width: 100%">
                                                @foreach (var opcion in opciones)
                                                {
                                                    <option value="@opcion.IdHomologacion">@opcion.MostrarWeb</option>
                                                }
                                            </select>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                </div>
                @if (listaEtiquetasGrilla != null) {
        <table class="table">
        <thead>
            <tr>
                @foreach(var etiqueta in listaEtiquetasGrilla.Where(c => c.MostarNivel.Equals("1"))) {
                    <th><Tooltip Title="@etiqueta.Descripcion">@etiqueta.MostrarWeb</Tooltip></th>
                }
            </tr>
        </thead>
        <tbody>
            @if (listResultadoBusqueda != null)
            {
                @foreach (var row in listResultadoBusqueda)
                {
                    var jsonData = JsonConvert.DeserializeObject<List<JsonDataresultado>>(row.DataJson); // Supongo que row.Json contiene el JSON
                    <tr>
                        @foreach (var etiqueta in listaEtiquetasGrilla.Where(c => c.MostarNivel.Equals("1")))
                        {
                            var diccionario = jsonData.FirstOrDefault(f => f.IdHomologacion == etiqueta.IdHomologacion);
                            <td>@(diccionario != null ? diccionario.ValorColumna : "")</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
}
        </div>
</div>

@code{
    private BuscarRequest buscarRequest = new BuscarRequest();

    [Inject]
    public IBusquedaRepository servicio { get; set; }

    private List<VwHomologacion>? listaEtiquetasFiltros;
    private List<VwHomologacion>? listaEtiquetasGrilla;
    private List<List<VwHomologacion>>? listadeOpciones = new List<List<VwHomologacion>>();

    private List<ResultadoBusqueda>? listResultadoBusqueda;

        class JsonDataresultado {
            public int IdHomologacion { get; set; }
            public string ValorColumna { get; set; }
        }

    protected override async Task OnInitializedAsync()
    {
        listaEtiquetasFiltros = await vwHomologacionRepository.GetHomologacionAsync("etiquetas_filtro");
        foreach(var opciones in listaEtiquetasFiltros) {
            listadeOpciones.Add(await vwHomologacionRepository.GetHomologacionDetalleAsync("filtro_detalles", opciones.IdHomologacion));
        }
        listaEtiquetasGrilla = await vwHomologacionRepository.GetHomologacionAsync("etiquetas_grilla");
    }

    private async Task BuscarPalabraRequest()
    {
        listResultadoBusqueda = await servicio.BuscarPalabraAsync(buscarRequest.TextoBuscar);
    }
}
