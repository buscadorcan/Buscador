@inherits LayoutComponentBase
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject ClientApp.Services.ToastService ToastService
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager
@using ClientApp.Services.IService


<Toasts class="p-3"
        Messages="ToastService.Messages"
        AutoHide="true"
        Delay="3000"
        Placement="ToastsPlacement.TopRight"
        CreateToastMessageCallback="CreateToastMessage" />

<div class="container-center-horizontal">
    @* <div class=@ClasePage> *@
    <div class="pantalla-inicio screen">
        <div class="menu-adminitrador-can">
            <div class="menu">
                <div class="menu-1 menu-4">
                    <div class="user_button">
                        <img class="avatar" src="admin/img/avatar.svg" alt="avatar">
                        <div class="frame-78">
                            <div class="frame-10000023">
                                <div class="alberto-mendez headingheadline5-h5">@nombre @apellidos</div>
                                <div class="frame-10000023">
                                    <div class="frame-1000002371">
                                        <div class="albertonovacerocom bodybody-small">@nombreRol</div>
                                    </div>
                                </div>
                            </div>
                            <img class="expand_more" src="admin/img/expand-more@2x.png" alt="expand_more">
                        </div>
                    </div>
                    <div class="men">
                        <div class="men-1">
                            <div class="inicio-1">
                                <a href="/administracion" class="inicio-2" style="cursor: pointer; text-decoration: none; color: inherit;">
                                    <img class="material-symbols-lig" src="admin/img/material-symbols-light-home-outline-rounded.svg" alt="material-symbols-light:home-outline-rounded">
                                    <div class="inicio-3 valign-text-middle headingheadline5-h5">Inicio</div>
                                </a>

                                <div class="perfiles">
                                    <div class="titulo"><div class="inicio valign-text-middle bodysmall-600">Perfiles</div></div>
                                    @if (navItems?.Any() == true)
                                    {
                                        @foreach (var item in navItems)
                                        {
                                            switch (item.Href)
                                            {
                                                case "/onas":
                                                    <div class="ona">
                                                        <img class="bibuilding" src="admin/img/bi-building.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>

                                                    break;
                                                case "/usuarios":
                                                    <div class="usuarios">
                                                        <img class="bibuilding" src="admin/img/solar-user-linear.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/reporte1":
                                                    <div class="estadisticas">
                                                        <img class="bibuilding" src="admin/img/frame-1000004265.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;

                                            }
                                        }
                                    }
                                    else
                                    {
                                        <p class="label valign-text-middle inter-regular-normal-comet-14px">Cargando menú...</p>
                                    }
                                </div>
                            </div>
                            <div class="homologacin">
                                <div class="titulo"><div class="inicio valign-text-middle bodysmall-600">Homologación</div></div>
                                <div class="menu-2 menu-4">
                                    @if (navItems?.Any() == true)
                                    {
                                        @foreach (var item in navItems)
                                        {
                                            switch (item.Href)
                                            {
                                                case "/conexion":
                                                    <div class="conexion">
                                                        <img class="bibuilding" src="admin/img/ep-connection.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/grupos":
                                                    <div class="grupos">
                                                        <img class="bibuilding" src="admin/img/frame-1000004265.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/campos-homologacion":
                                                    <div class="campos">
                                                        <img class="bibuilding" src="admin/img/bi-card-checklist.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/esquemas":
                                                    <div class="esquemas">
                                                        <img class="bibuilding" src="admin/img/material-symbols-light-ballot-outline.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/validacion":
                                                    <div class="campos">
                                                        <img class="bibuilding" src="admin/img/material-symbols-light-ballot-outline.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/migracion-excel":
                                                    <div class="excel">
                                                        <img class="bibuilding" src="admin/img/bi-file-earmark-excel.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/reportecan":
                                                    <div class="estadisticas">
                                                        <img class="bibuilding" src="admin/img/frame-1000004265.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/reporteona":
                                                    <div class="estadisticas">
                                                        <img class="bibuilding" src="admin/img/frame-1000004265.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                                case "/reporteread":
                                                    <div class="estadisticas">
                                                        <img class="bibuilding" src="admin/img/frame-1000004265.svg">
                                                        <NavLink href="@item.Href" class="place valign-text-middle headingheadline5-h5">@item.Text</NavLink>
                                                    </div>
                                                    break;
                                            }

                                        }
                                    }
                                    else
                                    {
                                        <p class="label valign-text-middle inter-regular-normal-comet-14px">Cargando menú...</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="ayuda">
                    <div class="menu-3 menu-4">
                        <img class="help" src="admin/img/help.svg" alt="help">
                        <NavLink class="nav-link ayuda-1 valign-text-middle headingheadline5-h5" href="salir">
                            <span class="p-2">
                                Salir
                            </span>
                        </NavLink>
                        @* <div class="ayuda-1 valign-text-middle headingheadline5-h5">
                            
                        </div> *@
                    </div>
                </div>
            </div>
        </div>

        @inject NavigationManager NavigationManager

        @if (NavigationManager.Uri.Contains("/administracion"))
        {
            @* ClasePage = "pantalla-inicio screen"; *@
            <div class="banner">
                <div class="top">
                    <img class="logo" src="admin/img/logo.svg" alt="logo">
                    <img class="vector-1" src="admin/img/vector-1.png" alt="vector 1">
                </div>
            </div>

        }
        else
        {
           
            <div class="general flex-col">
                <div class="general top">
                    <div class="general overlap-group">
                        <img class="general vector-1" src="admin/img/vector-1-1.png" alt="vector 1">
                        <img class="general frame" src="admin/img/frame-1.svg" alt="Frame">
                    </div>
                </div>
                @if (NavigationManager.Uri.Contains("/reportecan") ||
                   NavigationManager.Uri.Contains("/reporteona") ||
                   NavigationManager.Uri.Contains("/reporteread") ||
                   NavigationManager.Uri.Contains("/reporte1"))
                {
                    <link href="css/admin-report.css" rel="stylesheet">

                    <div class="">
                        @Body
                    </div>
                }

               @if (NavigationManager.Uri.Contains("/usuario") ||
               NavigationManager.Uri.Contains("/nuevo-usuario") ||
               NavigationManager.Uri.Contains("/editar-usuario") ||
               NavigationManager.Uri.Contains("/esquemas") ||
               NavigationManager.Uri.Contains("/nuevo-esquema") ||
               NavigationManager.Uri.Contains("/editar-esquema") ||
               NavigationManager.Uri.Contains("/onas") ||
               NavigationManager.Uri.Contains("/nuevo-ona") ||
               NavigationManager.Uri.Contains("/editar-ona") ||
               NavigationManager.Uri.Contains("/grupos") ||
               NavigationManager.Uri.Contains("/editar-grupos") ||
               NavigationManager.Uri.Contains("/campos-homologacion") ||
               NavigationManager.Uri.Contains("/editar-campos-homologacion") ||
               NavigationManager.Uri.Contains("/nuevo-campos-homologacion") ||
               NavigationManager.Uri.Contains("/migracion-excel") ||
               NavigationManager.Uri.Contains("/nueva-migarcion-excel") ||
               NavigationManager.Uri.Contains("/conexion") ||
               NavigationManager.Uri.Contains("/nuevo-conexion") ||
               NavigationManager.Uri.Contains("/editar-conexion") ||
               NavigationManager.Uri.Contains("/log-migracion") ||
               NavigationManager.Uri.Contains("/page-nodisponible") ||
               NavigationManager.Uri.Contains("/validacion"))   
               {
                    <link href="css/admin.css" rel="stylesheet">
                    <link href="css/pagination.css" rel="stylesheet">
                    <link href="css/modal-footer.css" rel="stylesheet">
                    <link href="css/btn-export.css" rel="stylesheet">
                    <link href="css/activo-inactivo.css" rel="stylesheet">
                    <link href="css/table-header.css" rel="stylesheet">
                    <link href="css/table-body.css" rel="stylesheet">
                    <link href="css/input-file.css" rel="stylesheet">
                    <link href="css/custom-dropdown.css" rel="stylesheet">
                    <div class="general main-container">
                        @Body
                    </div>
                }
               
            </div>

        }
    </div>

</div>

@code {
    private bool IsSidebarVisible { get; set; } = true;
    private bool IsSubMenuVisible { get; set; } = false;

    private string SidebarClass => IsSidebarVisible ? "" : "hidden";
    private string SidebarToggleText => IsSidebarVisible ? "Ocultar Menú" : "Mostrar Menú";

    private string SubMenuClass => IsSubMenuVisible ? "show" : "";

    // Obtención de datos desde LocalStorage
    private int rol;
    private string nombreRol;
    private string nombre;
    private string apellidos;
    private string codigoRol;

    protected override async Task OnInitializedAsync()
    {
        codigoRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Codigo_Rol_Local);

        if (codigoRol == "KEY_USER_CAN")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else if (codigoRol == "KEY_USER_ONA")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else if (codigoRol == "KEY_USER_READ")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }

        nombre = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Local);
        apellidos = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Apellido_Local);

        // if (navItems is null || navItems.Count == 0)
        navItems = await GetNavItemsAsync();

        await Task.Delay(2000);
    }

    private void ToggleSidebar()
    {
        IsSidebarVisible = !IsSidebarVisible;
    }

    private void ToggleSubMenu()
    {
        IsSubMenuVisible = !IsSubMenuVisible;
    }
}

@code {
    Sidebar2 sidebar;
    private IEnumerable<NavItem>? navItems = new List<NavItem>();

    [Inject]
    private ICatalogosService? _Icatalogo { get; set; }

    [Inject]
    ILocalStorageService iLocalStorageService { get; set; }

    private string TituloMenu;
    private string ClasePage;

    [Parameter] public EventCallback<List<NavItem>> OnNavItemsChanged { get; set; } // 🔹 Nuevo parámetro

    private async Task<Sidebar2DataProviderResult> Sidebar2DataProvider(Sidebar2DataProviderRequest request)
    {
        if (navItems is null)
            navItems = await GetNavItemsAsync();

        await Task.Delay(2000);
        return await Task.FromResult(request.ApplyTo(navItems));
    }
    public class CustomNavItem
    {
        public NavItem NavItem { get; set; }
        public string CodigoHomologacion { get; set; }

        public CustomNavItem(NavItem navItem, string codigoHomologacion)
        {
            NavItem = navItem;
            CodigoHomologacion = codigoHomologacion;
        }
    }

    private async Task<IEnumerable<NavItem>> GetNavItemsAsync()
    {
        var menuItems = await _Icatalogo.GetMenusAsync();
        TituloMenu = await iLocalStorageService.GetItemAsync<string>(Inicializar.Datos_Menu_Titulo_Local);
        var rol = await iLocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Codigo_Rol_Local);

        // Excluir ciertos menús según el rol
        var excludedHrefs = rol switch
        {
            "KEY_USER" => new[] { "KEY_MENU_REP_CAN", "KEY_MENU_REP_ONA", "KEY_MENU_REP_READ", "KEY_MENU_ONA", "KEY_MENU_CON", "KEY_MENU_USU", "KEY_MENU_GRU", "KEY_MENU_CAM", "KEY_MENU_ESQ", "KEY_MENU_VAL", "KEY_MENU_MIG_EXCEL", "KEY_MENU_MIG_LOG" },
            "KEY_USER_CAN" => new[] { "KEY_MENU_REP_ONA", "KEY_MENU_REP_READ" },
            "KEY_USER_ONA" => new[] { "KEY_MENU_REP_CAN", "KEY_MENU_REP_READ", "KEY_MENU_ONA", "KEY_MENU_USU", "KEY_MENU_GRU", "KEY_MENU_CAM", "KEY_MENU_ESQ" },
            "KEY_USER_READ" => new[] { "KEY_MENU_REP_CAN", "KEY_MENU_REP_ONA" },
            _ => Array.Empty<string>()
        };

        var filteredMenuItems = menuItems.Where(menu => !excludedHrefs.Contains(menu.CodigoHomologacion));

        // Convertir en NavItem
        var navItemsList = filteredMenuItems.Select(menu =>
        {
            BlazorBootstrap.IconName iconName = menu.CodigoHomologacion switch
            {
                "KEY_MENU_ONA" => BlazorBootstrap.IconName.PersonFill,
                "KEY_MENU_CON" => BlazorBootstrap.IconName.Link,
                "KEY_MENU_USU" => BlazorBootstrap.IconName.PeopleFill,
                "KEY_MENU_GRU" => BlazorBootstrap.IconName.Diagram2Fill,
                "KEY_MENU_CAM" => BlazorBootstrap.IconName.Columns,
                "KEY_MENU_ESQ" => BlazorBootstrap.IconName.Diagram3Fill,
                "KEY_MENU_VAL" => BlazorBootstrap.IconName.CheckCircleFill,
                "KEY_MENU_SEP" => BlazorBootstrap.IconName.Dash,
                _ => BlazorBootstrap.IconName.QuestionCircleFill
            };

            return new NavItem
                {
                    Id = menu.IdHomologacionMenu.ToString(),
                    Text = menu.MostrarWeb,
                    Href = menu.href,
                    IconName = iconName
                };
        }).ToList(); 

        await OnNavItemsChanged.InvokeAsync(navItemsList); // 🔹 Enviar valores a AdminLayout.razor

        return navItemsList;
    }
}

