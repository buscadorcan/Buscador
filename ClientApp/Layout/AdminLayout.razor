@inherits LayoutComponentBase
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject ClientApp.Services.ToastService ToastService
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<Toasts class="p-3"
        Messages="ToastService.Messages"
        AutoHide="true"
        Delay="3000"
        Placement="ToastsPlacement.TopRight"
        CreateToastMessageCallback="CreateToastMessage" />

<div class="bb-page">
    <!-- Sidebar -->
    <div class="admin-sidebar @SidebarClass">
        <AdminSidebar />
    </div>

    <!-- Main Content -->
    <main class="bb-main-content">
        <!-- Top Row -->
        <div class="bb-top-row">
            <!-- Botón de Mostrar/Ocultar Sidebar -->
            <button class="btn btn-primary btn-sm" @onclick="ToggleSidebar">
                @SidebarToggleText
            </button>

            <!-- User Info Section -->
            <div class="user-info" @onclick="ToggleSubMenu">
                <i class="fas fa-user-circle"></i>
                <div>
                    <span>@nombre @apellidos</span>
                    <span class="email">@nombreRol</span> <!-- Correo con salto de línea -->
                </div>
            </div>

            <!-- Submenu de Salir -->
            <div class="submenu @SubMenuClass">
                <a href="/acceder">Salir</a>
            </div>
        </div>

        <!-- Article Content -->
        <article class="content">
            @Body
        </article>
    </main>
</div>

@code {
    private bool IsSidebarVisible { get; set; } = true;
    private bool IsSubMenuVisible { get; set; } = false;

    private string SidebarClass => IsSidebarVisible ? "" : "hidden";
    private string SidebarToggleText => IsSidebarVisible ? "Ocultar Menú" : "Mostrar Menú";

    private string SubMenuClass => IsSubMenuVisible ? "show" : "";

    // Obtención de datos desde LocalStorage
    private int rol;
    private string nombreRol;
    private string nombre;
    private string apellidos;
    private string codigoRol;

    protected override async Task OnInitializedAsync()
    {
        codigoRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Codigo_Rol_Local);

        if (codigoRol == "KEY_USER_CAN")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else if (codigoRol == "KEY_USER_ONA")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else if (codigoRol == "KEY_USER_READ")
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }
        else
        {
            nombreRol = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Rol_Local);
        }

        nombre = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Nombre_Local);
        apellidos = await LocalStorageService.GetItemAsync<string>(Inicializar.Datos_Usuario_Apellido_Local);
    }

    private void ToggleSidebar()
    {
        IsSidebarVisible = !IsSidebarVisible;
    }

    private void ToggleSubMenu()
    {
        IsSubMenuVisible = !IsSubMenuVisible;
    }
}
